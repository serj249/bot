# handlers/start.py
from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from keyboards import main_menu_kb, back_kb_single

router = Router()

# —Å–æ–∑–¥–∞—ë–º –º–∏–Ω–∏-StatesGroup –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ (–≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö –±—É–¥–µ–º —Å–≤–æ–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è)
class SimpleSG(StatesGroup):
    dummy = State()

# --- —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π handler –¥–ª—è –∫–Ω–æ–ø–∫–∏ "‚¨ÖÔ∏è –ù–∞–∑–∞–¥" ---
# —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —ç—Ç–æ–≥–æ —Ö—ç–Ω–¥–ª–µ—Ä–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ä–∞–Ω—å—à–µ, —á—Ç–æ–±—ã –æ–Ω –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–ª "–ù–∞–∑–∞–¥" –¥–æ –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
@router.message(F.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
async def handle_back(message: Message, state: FSMContext):
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ '‚¨ÖÔ∏è –ù–∞–∑–∞–¥'.
    –õ–æ–≥–∏–∫–∞: –µ—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ‚Äî –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞–∑–∞–¥/—á–∏—Å—Ç–∏–º –∫–æ–Ω—Ç–µ–∫—Å—Ç,
    –µ—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–µ—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    """
    current = await state.get_state()
    if current:
        # –ø—Ä–æ—Å—Ç–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞: –æ—á–∏—â–∞–µ–º —Å—Ç–µ–π—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –º–µ–Ω—é
        await state.clear()
        await message.answer("–í–æ–∑–≤—Ä–∞—Ç. –í—ã –≤ –º–µ–Ω—é.", reply_markup=main_menu_kb())
    else:
        await message.answer("–í—ã —É–∂–µ –≤ –º–µ–Ω—é.", reply_markup=main_menu_kb())

# --- /start ---
@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    # –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î –∑–¥–µ—Å—å (–¥–µ–ª–∞–µ–º —ç—Ç–æ –≤ main.py –æ–¥–∏–Ω —Ä–∞–∑)
    await state.clear()
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! üëã\n–Ø –ø–æ–º–æ–≥—É —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è –∏ —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫.\n\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ.",
        reply_markup=main_menu_kb()
    )

# --- –ø–æ–º–æ—â—å ---
@router.message(F.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å")
async def help_handler(message: Message):
    await message.answer(
        "–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é:\n"
        "‚Ä¢ üÜï –°–æ–∑–¥–∞—Ç—å –ø–ª–∞–Ω ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∫–µ—Ç—É\n"
        "‚Ä¢ üìã –ú–æ–∏ –ø–ª–∞–Ω—ã ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ\n"
        "‚Ä¢ üßæ –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ ‚Äî —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∫—É–ø–∫–∏\n\n–í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –Ω–∞–∂–º–∏ ¬´‚¨ÖÔ∏è –ù–∞–∑–∞–¥¬ª –¥–ª—è –æ—Ç–º–µ–Ω—ã/–≤—ã—Ö–æ–¥–∞.",
        reply_markup=main_menu_kb()
    )

# --- –ø–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞–Ω–∞ (–º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä —Ç–æ–ª—å–∫–æ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—É, –ø–æ–¥—Ä–æ–±–Ω—É—é –∞–Ω–∫–µ—Ç—É –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –º–æ–¥—É–ª–µ) ---
@router.message(F.text == "üÜï –°–æ–∑–¥–∞—Ç—å –ø–ª–∞–Ω")
async def start_create_plan(message: Message, state: FSMContext):
    # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –º–æ–¥—É–ª—é —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–Ω–∞:
    # —É—Å—Ç–∞–Ω–æ–≤–∏–º –ø—Ä–æ—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä. –ü–æ–ª–Ω—É—é –ª–æ–≥–∏–∫—É –∞–Ω–∫–µ—Ç—ã –≤—ã–Ω–µ—Å–µ–º –≤ handlers/plan_create.py
    await state.set_state(SimpleSG.dummy)
    await message.answer("–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–æ–∑–¥–∞–Ω–∏—é –ø–ª–∞–Ω–∞ ‚Äî –º–æ–¥—É–ª—å –∞–Ω–∫–µ—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω (–≤ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ).", reply_markup=back_kb_single())

# --- –∑–∞–≥–ª—É—à–∫–∞: –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é "–ú–æ–∏ –ø–ª–∞–Ω—ã" ---
@router.message(F.text == "üìã –ú–æ–∏ –ø–ª–∞–Ω—ã")
async def my_plans_stub(message: Message):
    await message.answer("–ú–æ–¥—É–ª—å '–ú–æ–∏ –ø–ª–∞–Ω—ã' –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è –≤ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ.", reply_markup=main_menu_kb())

# --- –∑–∞–≥–ª—É—à–∫–∞: —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ ---
@router.message(F.text == "üßæ –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫")
async def shopping_stub(message: Message):
    await message.answer("–ú–æ–¥—É–ª—å '–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫' –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è –≤ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ.", reply_markup=main_menu_kb())
