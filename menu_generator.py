import random

# –ü—Ä–æ–¥—É–∫—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
PROTEINS = [
    {"name": "–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞", "protein": 23, "fat": 1.9, "carbs": 0, "kcal": 113},
    {"name": "–ò–Ω–¥–µ–π–∫–∞", "protein": 21, "fat": 5, "carbs": 0, "kcal": 135},
    {"name": "–Ø–π—Ü–∞", "protein": 12, "fat": 10, "carbs": 1, "kcal": 143},
    {"name": "–¢–≤–æ—Ä–æ–≥ 5%", "protein": 17, "fat": 5, "carbs": 2, "kcal": 121},
    {"name": "–ì–æ–≤—è–¥–∏–Ω–∞ –ø–æ—Å—Ç–Ω–∞—è", "protein": 20, "fat": 8, "carbs": 0, "kcal": 160},
    {"name": "–†—ã–±–∞ (—Ö–µ–∫)", "protein": 17, "fat": 2, "carbs": 0, "kcal": 90},
]

CARBS = [
    {"name": "–†–∏—Å", "protein": 7, "fat": 0.6, "carbs": 75, "kcal": 340},
    {"name": "–ì—Ä–µ—á–∫–∞", "protein": 13, "fat": 3.4, "carbs": 72, "kcal": 329},
    {"name": "–û–≤—Å—è–Ω–∫–∞", "protein": 11, "fat": 6, "carbs": 62, "kcal": 352},
    {"name": "–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å", "protein": 2, "fat": 0.4, "carbs": 16, "kcal": 80},
    {"name": "–ú–∞–∫–∞—Ä–æ–Ω—ã", "protein": 12, "fat": 1.5, "carbs": 72, "kcal": 340},
]

FATS = [
    {"name": "–û–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ", "protein": 0, "fat": 100, "carbs": 0, "kcal": 900},
    {"name": "–ì—Ä–µ—Ü–∫–∏–µ –æ—Ä–µ—Ö–∏", "protein": 16, "fat": 60, "carbs": 11, "kcal": 654},
    {"name": "–ê—Ä–∞—Ö–∏—Å", "protein": 25, "fat": 48, "carbs": 12, "kcal": 580},
    {"name": "–°–µ–º–µ—á–∫–∏", "protein": 20, "fat": 52, "carbs": 5, "kcal": 570},
]

VEGGIES = [
    {"name": "–ë—Ä–æ–∫–∫–æ–ª–∏", "protein": 3, "fat": 0.4, "carbs": 7, "kcal": 35},
    {"name": "–û–≥—É—Ä—Ü—ã", "protein": 0.8, "fat": 0.1, "carbs": 3, "kcal": 15},
    {"name": "–ü–æ–º–∏–¥–æ—Ä—ã", "protein": 0.9, "fat": 0.2, "carbs": 4, "kcal": 20},
    {"name": "–ú–æ—Ä–∫–æ–≤—å", "protein": 1.3, "fat": 0.1, "carbs": 6.9, "kcal": 32},
]

def generate_meal_plan(total_protein, total_fat, total_carbs, total_kcal, meals=3):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è –Ω–∞ –¥–µ–Ω—å —Å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–º–∏ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏
    """
    meal_plan = []
    p_per_meal = total_protein / meals
    f_per_meal = total_fat / meals
    c_per_meal = total_carbs / meals
    kcal_per_meal = total_kcal / meals

    for i in range(meals):
        protein_source = random.choice(PROTEINS)
        carb_source = random.choice(CARBS)
        fat_source = random.choice(FATS) if i != meals-1 else None  # –∂–∏—Ä—ã –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞ –∫–∞–∂–¥–æ–º –ø—Ä–∏–µ–º–µ
        veg_source = random.choice(VEGGIES)

        # –ü—Ä–∏–º–µ—Ä–Ω–æ –ø–æ–¥–±–∏—Ä–∞–µ–º –≥—Ä–∞–º–º–æ–≤–∫—É
        protein_g = round((p_per_meal / protein_source["protein"]) * 100, 0)
        carb_g = round((c_per_meal / carb_source["carbs"]) * 100, 0)
        veg_g = 100
        fat_g = round((f_per_meal / fat_source["fat"]) * 100, 0) if fat_source else 0

        items = [
            {"product": protein_source["name"], "g": protein_g, **protein_source},
            {"product": carb_source["name"], "g": carb_g, **carb_source},
            {"product": veg_source["name"], "g": veg_g, **veg_source},
        ]
        if fat_source:
            items.append({"product": fat_source["name"], "g": fat_g, **fat_source})

        # –ü–æ–¥—Å—á–µ—Ç –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏
        meal_kcal = 0
        meal_p = 0
        meal_f = 0
        meal_c = 0
        for item in items:
            factor = item["g"] / 100
            meal_kcal += item["kcal"] * factor
            meal_p += item["protein"] * factor
            meal_f += item["fat"] * factor
            meal_c += item["carbs"] * factor

        meal_plan.append({
            "title": f"üçΩ –ü—Ä–∏—ë–º –ø–∏—â–∏ {i+1}",
            "items": items,
            "totals": {
                "kcal": round(meal_kcal),
                "protein": round(meal_p),
                "fat": round(meal_f),
                "carbs": round(meal_c)
            }
        })

    return meal_plan

def format_meal_plan(meal_plan, total_kcal, total_p, total_f, total_c):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫—Ä–∞—Å–∏–≤–æ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ–Ω—é –¥–ª—è Telegram (Markdown)
    """
    lines = []
    for meal in meal_plan:
        lines.append(f"{meal['title']} ({meal['totals']['kcal']} –∫–∫–∞–ª)")
        for item in meal["items"]:
            lines.append(f"‚Ä¢ {item['product']} ‚Äî {int(item['g'])} –≥ (–ë {item['protein']} / –ñ {item['fat']} / –£ {item['carbs']})")
        lines.append("")  # –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞

    lines.append(f"üìä *–ò—Ç–æ–≥ –∑–∞ –¥–µ–Ω—å:* {round(total_kcal)} –∫–∫–∞–ª ‚Äî –ë {round(total_p)} / –ñ {round(total_f)} / –£ {round(total_c)}")
    return "\n".join(lines)
